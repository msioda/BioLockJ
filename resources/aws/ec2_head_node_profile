######=======================================######
######    LOAD BioLockJ AWS .bash_profile    ###### 
######=======================================######

# Get the aliases and functions
[ -f ~/.bashrc ] && . ~/.bashrc

umask 0007

export PS1='\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h\[\033[33;1m\]..$(basename "$(dirname $PWD)")/$(basename $PWD)\[\033[m\]~$ '
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export EFS="/mnt/efs"
export BLJ_DB="$EFS/db"
export BLJ_INPUT="$EFS/input"
export BLJ_META="$EFS/metadata"
export BLJ_PROJ="$EFS/pipelines"
export BLJ_PRIMER="$EFS/primer"
export BLJ_CONFIG="$EFS/config"
export BLJ_SCRIPT="$EFS/script"
export blj_aws_config="$BLJ_CONFIG/blj_config"
export BLJ=$EFS
export PATH="$BLJ_SCRIPT:$PATH:$HOME/.local/bin:$HOME/bin"

alias ls='ls -lFh'
alias rd="rm -rf"
alias md5="openssl md5"
alias rf="source ~/.bash_profile"
alias ..="cd .."
alias h="head -n 8"
alias t="tail -n 8"
alias f="find . -name"
alias vib="vi ~/.bash_profile"
alias cab="cat ~/.bash_profile"
alias tlog="tail -1000 *.log"
alias tlogf="tail -1000f *.log"
alias dockls="docker images; docker container ls --all"
alias goblj="blj_go"
alias showIFS="printf %q $IFS"

source $blj_aws_config
source $BLJ_SCRIPT/aws_head_node_lib

export blj_aws_config="$BLJ_CONFIG/blj_config"
export DOCKER_HUB_USER=${dockerUser}

[ ! -f ~/.${awsStack}-CREATED_DOCKER_JOB_DEFS ] && build_docker_job_defs && build_nextflow_config

export S3_BUCKET="s3://${awsS3}"
export S3_CONFIG="$S3_BUCKET/config"
export S3_DB="$S3_BUCKET/db"
export S3_META="$S3_BUCKET/metadata"
export S3_PROJ="$S3_BUCKET/pipelines"
export S3_PRIMER="$S3_BUCKET/primer"
export S3_SEQ="$S3_BUCKET/seq"

# Print AWS Config report
aws_report_config() {
	echo "---------------------------------------------------"
	echo "Report current AWS Config"
	echo "---------------------------------------------------"
	[ -f "$blj_aws_config" ] && tail -n +2 "$blj_aws_config"
	echo "---------------------------------------------------"
}

# Remove old Docker images
clearDock() {
	echo "Stop/remove all containers & remove old images..."
	containers=$(docker ps -aq)
	runningProcs=$(docker ps -q)
	images=$(docker images -f "dangling=true" -q) 
	
	[ ${#runningProcs} -gt 0 ] && docker kill $runningProcs
	[ ${#containers} -gt 0 ] && docker rm $containers
	[ ${#images} -gt 0 ] && docker rmi $images
	
	echo "Verify old containers & images have been removed..."
	dockls
}

# Return absolute path of most recent pipeline
most_recent_pipeline() {
	IFS2="$IFS"
	if ! $(dir_missing $BLJ_PROJ); then
		IFS=$'\n'
		dirs=$(\ls -1dt $BLJ_PROJ/*)
		myDirs=( "$dirs" )
		for dir in $myDirs; do
			$(is_pipeline_dir $dir) && echo "$dir" && IFS=$"IFS2" && return
		done
	fi
	IFS=$"IFS2"
}

echo "AWS Profile loaded - Docker Account ID: $DOCKER_HUB_USER"

######=======================================######
######   BioLockJ AWS .bash_profile LOADED   ###### 
######=======================================######
