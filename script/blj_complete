#!/bin/bash
###############################################################################
##                                                                           ##
##  This script manually completes current module and pipeline status.       ##
##  All modules numbered below than the current module will also be reset.   ##
##                                                                           ##
###############################################################################
. "${BLJ_LIB}"

if [ ${#1} -gt 0 ]; then myDir="${1}"; else myDir="$PWD"; fi
echo "Starting [ blj_complete ] to reset status of modules before/including $myDir to --> \"biolockjComplete\""

if $(is_pipeline_dir "$myDir"); then
	pipeDir="$myDir" && myNum=$(($(ls "$pipeDir" | wc -l)+1))
else
	pipeDir=$(dirname "$myDir") && aDir=$(basename "$myDir") && myNum=$((10#${aDir%%_*}+1))
fi

if ! $(is_pipeline_dir "$pipeDir"); then
	exit_script "Error [ blj_reset ] target dir is not a pipeline or module root directory --> $myDir"
fi

[ -f "$pipeDir/biolockjComplete" ] && rm "$pipeDir/biolockjComplete" && echo "Deleted $pipeDir/biolockjComplete"
[ -f "$pipeDir/biolockjFailed" ] && rm "$pipeDir/biolockjFailed" && echo "Deleted $pipeDir/biolockjFailed"
found=false
for modDir in $pipeDir/*; do
	if ! $(is_empty "$modDir") && $(is_module_dir "$modDir"); then
		dirName=$(basename "$modDir")
		[ $((10#${dirName%%_*})) -lt $myNum ] && [ -f "$modDir/biolockjStarted" ] && found=true && \
			rm "$modDir/biolockjStarted" && echo "Deleted $modDir/biolockjStarted" && \
			[ ! -f "$modDir/biolockjComplete" ] && touch "$modDir/biolockjComplete" && echo "Created $modDir/biolockjComplete" 
	fi
done

[ $found == false ] && echo "All pipeline directories up to/including $myDir already complete - no changes made"