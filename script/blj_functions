###################################################################
##                                                               ##
##  This script contains common functions used in BioLockJ.      ##
##                                                               ##
###################################################################

# Rerun current pipeline from point of failure using same MASTER config
blj_rerun() {
	biolockj -r $PWD
}

# Return absolute path of current pipeline if in a pipeline directory
current_pipeline() {
	if [ -d "$BLJ_PROJ" ] && ! $(is_empty $BLJ_PROJ); then
		dir="$PWD"
		parentDir="$(dirname $dir)"
		while [ "$parentDir" != "$BLJ_PROJ" ] && [  "$parentDir" != "$(dirname $parentDir)" ] && ! $(is_pipeline_dir $dir)
		do
			dir="$parentDir"
			parentDir="$(dirname $parentDir)"
		done
		[ "$parentDir" == "$BLJ_PROJ" ] && echo $dir
   fi
}

# Return 0 if directory is empty (or missing)
is_empty() {
	[ ! -d "$1" ] || [ -z "$(\ls -A $1)" ]
}

# Return TRUE if the directory path given ends with a valid module name
# Example: 01_Demultiplexer
is_module_dir() {
	modName=$(basename $1)
	modNum=0
	[ ${#modName} -gt 3 ] && modNum=$( echo ${modName:0:2} | egrep "^[0-9{2}]+$" )
	
	[ -d "$1" ] && [ ${modName:2:1} == "_" ] && [ $modNum -gt 0 ]
}

# Trim last input $1 character if ends with "/"
# Return 0 status code if $1 param ends with patthern _yyyymmmdd.
# Example: myTestPipeline_2019Jan01 returns TRUE
is_pipeline_dir() {
	dir=$1
	[ ${dir: -1} == "/" ] && dir=${dir:0:$((${#dir}-1))}
	prefix=${dir: -10:1}
	year=$(echo ${dir: -9:4} | egrep "^[0-9{4}]+$")
	mon1=$(echo ${dir: -5:1} | egrep "^[A-S]+$")
	mon23=$(echo ${dir: -4:2} | egrep "^[a-y{2}]+$")
	day=$(echo ${dir: -2} | egrep "^[0-9{2}]+$")
	[ -d "$1" ] && [ $prefix == "_" ] && [ ${#year} -eq 4 ] && [ ${#mon1} -eq 1 ] && [ ${#mon23} -eq 2 ] && [ ${#day} -eq 2 ]
}

# Return BioLockJ release version
get_version() {
	if [ -f "$BLJ/.version" ]; then
		{ read -r v; } < "$BLJ/.version"
		echo $v
	else
		echo "Missing $BLJ/.version"
	fi
}

# Return absolute path of most recent pipeline
most_recent_pipeline() {
	if [ -d "$BLJ_PROJ" ] && ! $(is_empty $BLJ_PROJ); then
		for dir in $(ls -1dt $BLJ_PROJ/*); do
			$(is_pipeline_dir $dir) && echo "$dir" && exit
		done
	fi
}
