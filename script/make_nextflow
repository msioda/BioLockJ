#!/bin/bash
################################################################################
##                                                                            ##
##  Build Nexflow main.nf template                                            ##
##  Query for SEARCH_KEY in all java files under $BLJ/src/biolockj/module     ##
##  For each valid file, trim the file path & file extension                  ##
##  Remaining value = Java class name module.getClass().getName() after       ##
##                    substituting "_" for all "." characters                 ##
##                                                                            ##
################################################################################
. $BLJ/script/blj_config
echo "Check EFS_CONFIG --> $EFS_CONFIG"
. $EFS_CONFIG/aws_config

AWS_DIR="$HOME/.aws"
[ ! -d "$AWS_DIR" ] && mkdir "$AWS_DIR" && echo "Created $AWS_DIR directory"

buildAwsConfig() {
	AWS_CONF="${AWS_DIR}/config"
	echo "Generating ${AWS_CONF} in the biolockj container"
	echo "[default]" > "${AWS_CONF}"
	echo "region = ${awsRegion}" >> "${AWS_CONF}"
	echo "output = text" >> "${AWS_CONF}"
	echo "Created --> ${AWS_CONF}"
	cat "${AWS_CONF}"
}

buildAwsCredentials() {
	AWS_CRED="${AWS_DIR}/credentials"
	echo "Generating ${AWS_CRED} in the biolockj container"
	echo "[default]" > "${AWS_CRED}"
	echo "aws_access_key_id = ${aws_access_key_id}" >> "${AWS_CRED}"
	echo "aws_secret_access_key = ${aws_secret_access_key}" >> "${AWS_CRED}"
	echo "Created -->" "${AWS_CRED}"
	cat "${AWS_CRED}"
}

buildNexflowConfigDir() {
	NF_DIR="$HOME/.nextflow"
	[ ! -d "${NF_DIR}" ] && mkdir "${NF_DIR}" && echo Created "${NF_DIR} directory"
	echo "Copy $EFS_CONFIG/nextflow/${awsStack}/config to --> ${NF_DIR}"
	cp "$EFS_CONFIG/nextflow/${awsStack}/config" "${NF_DIR}"
	echo "Created --> Nextflow config: ${NF_DIR}/config"
	cat "${NF_DIR}/config"
}

# Build the template
# Param 1 - List of modules (using special delimiters)
buildNexflowTemplate() {
	modules="${2}"
	numModules=$(echo $modules | wc -w | xargs)
	summaryMsg="BioLockJ $(get_version) generated Nextflow Config with $numModules BioModule process definitions"
	echo "// $summaryMsg" > "${1}"
	echo "" >> "${1}"
	for module in ${modules[@]}; do
		echo "process ${module} {" >> "${1}"
		echo '    echo true' >> "${1}"
		echo '    cpus $script.numThreads' >> "${1}"
		echo '    memory $aws.ram' >> "${1}"
		echo '    label $nextflow.dockerImage' >> "${1}"
		echo '    input:' >> "${1}"
		echo '    val worker from Channel.watchPath( "BLJ_MODULE_SUB_DIR/*.sh" )' >> "${1}"
		echo '    """' >> "${1}"
		echo '    #!/bin/bash' >> "${1}"
		echo '    bash ${worker}' >> "${1}"
		echo '    """' >> "${1}"
		echo '}' >> "${1}"
	done
	echo "-----------------------------------------------------------------------------------------"
	[ -f "${1}" ] && echo "Success!  $summaryMsg" && echo "Deployed: ${1}"  
	cat "${1}"
	echo "-----------------------------------------------------------------------------------------"	
}

get_modules() {
	modules=${1//./ }
	modules=( $modules )
	echo ${modules[*]}
}

if [ $# -lt 2 ]; then
	echo "Missing required parameters, 2 params requried main.nf - 1) file-path, 2) List of modules formatted with specific delimiters"
else
	buildNexflowConfigDir
	buildAwsConfig
	buildAwsCredentials
	buildNexflowTemplate "${1}" "$(get_modules ${2})"
fi
